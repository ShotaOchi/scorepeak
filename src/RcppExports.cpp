// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// detect_localmaxima_reflecting_cpp
Rcpp::LogicalVector detect_localmaxima_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_detect_localmaxima_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(detect_localmaxima_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// detect_localmaxima_periodic_cpp
Rcpp::LogicalVector detect_localmaxima_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_detect_localmaxima_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(detect_localmaxima_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// detect_localmaxima_discard_cpp
Rcpp::LogicalVector detect_localmaxima_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_detect_localmaxima_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(detect_localmaxima_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_left_reflecting_cpp
Rcpp::NumericVector max_neighbors_left_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_left_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_left_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_right_reflecting_cpp
Rcpp::NumericVector max_neighbors_right_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_right_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_right_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_both_reflecting_cpp
Rcpp::NumericVector max_neighbors_both_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_both_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_both_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_all_reflecting_cpp
Rcpp::NumericVector max_neighbors_all_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_all_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_all_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_left_periodic_cpp
Rcpp::NumericVector max_neighbors_left_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_left_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_left_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_right_periodic_cpp
Rcpp::NumericVector max_neighbors_right_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_right_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_right_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_both_periodic_cpp
Rcpp::NumericVector max_neighbors_both_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_both_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_both_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_all_periodic_cpp
Rcpp::NumericVector max_neighbors_all_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_all_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_all_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_left_discard_cpp
Rcpp::NumericVector max_neighbors_left_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_left_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_left_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_right_discard_cpp
Rcpp::NumericVector max_neighbors_right_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_right_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_right_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_both_discard_cpp
Rcpp::NumericVector max_neighbors_both_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_both_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_both_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// max_neighbors_all_discard_cpp
Rcpp::NumericVector max_neighbors_all_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_max_neighbors_all_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(max_neighbors_all_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_left_reflecting_cpp
Rcpp::NumericVector mean_neighbors_left_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_left_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_left_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_right_reflecting_cpp
Rcpp::NumericVector mean_neighbors_right_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_right_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_right_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_both_reflecting_cpp
Rcpp::NumericVector mean_neighbors_both_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_both_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_both_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_all_reflecting_cpp
Rcpp::NumericVector mean_neighbors_all_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_all_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_all_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_left_periodic_cpp
Rcpp::NumericVector mean_neighbors_left_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_left_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_left_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_right_periodic_cpp
Rcpp::NumericVector mean_neighbors_right_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_right_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_right_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_both_periodic_cpp
Rcpp::NumericVector mean_neighbors_both_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_both_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_both_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_all_periodic_cpp
Rcpp::NumericVector mean_neighbors_all_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_all_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_all_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_left_discard_cpp
Rcpp::NumericVector mean_neighbors_left_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_left_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_left_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_right_discard_cpp
Rcpp::NumericVector mean_neighbors_right_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_right_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_right_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_both_discard_cpp
Rcpp::NumericVector mean_neighbors_both_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_both_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_both_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// mean_neighbors_all_discard_cpp
Rcpp::NumericVector mean_neighbors_all_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_mean_neighbors_all_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_neighbors_all_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_left_reflecting_cpp
Rcpp::NumericVector min_neighbors_left_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_left_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_left_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_right_reflecting_cpp
Rcpp::NumericVector min_neighbors_right_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_right_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_right_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_both_reflecting_cpp
Rcpp::NumericVector min_neighbors_both_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_both_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_both_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_all_reflecting_cpp
Rcpp::NumericVector min_neighbors_all_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_all_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_all_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_left_periodic_cpp
Rcpp::NumericVector min_neighbors_left_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_left_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_left_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_right_periodic_cpp
Rcpp::NumericVector min_neighbors_right_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_right_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_right_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_both_periodic_cpp
Rcpp::NumericVector min_neighbors_both_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_both_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_both_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_all_periodic_cpp
Rcpp::NumericVector min_neighbors_all_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_all_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_all_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_left_discard_cpp
Rcpp::NumericVector min_neighbors_left_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_left_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_left_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_right_discard_cpp
Rcpp::NumericVector min_neighbors_right_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_right_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_right_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_both_discard_cpp
Rcpp::NumericVector min_neighbors_both_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_both_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_both_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// min_neighbors_all_discard_cpp
Rcpp::NumericVector min_neighbors_all_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_min_neighbors_all_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(min_neighbors_all_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_left_reflecting_cpp
Rcpp::NumericVector sd_neighbors_left_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_left_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_left_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_right_reflecting_cpp
Rcpp::NumericVector sd_neighbors_right_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_right_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_right_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_both_reflecting_cpp
Rcpp::NumericVector sd_neighbors_both_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_both_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_both_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_all_reflecting_cpp
Rcpp::NumericVector sd_neighbors_all_reflecting_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_all_reflecting_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_all_reflecting_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_left_periodic_cpp
Rcpp::NumericVector sd_neighbors_left_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_left_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_left_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_right_periodic_cpp
Rcpp::NumericVector sd_neighbors_right_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_right_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_right_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_both_periodic_cpp
Rcpp::NumericVector sd_neighbors_both_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_both_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_both_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_all_periodic_cpp
Rcpp::NumericVector sd_neighbors_all_periodic_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_all_periodic_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_all_periodic_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_left_discard_cpp
Rcpp::NumericVector sd_neighbors_left_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_left_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_left_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_right_discard_cpp
Rcpp::NumericVector sd_neighbors_right_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_right_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_right_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_both_discard_cpp
Rcpp::NumericVector sd_neighbors_both_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_both_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_both_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}
// sd_neighbors_all_discard_cpp
Rcpp::NumericVector sd_neighbors_all_discard_cpp(const Rcpp::NumericVector& data, const int& windowsize);
RcppExport SEXP _scorepeak_sd_neighbors_all_discard_cpp(SEXP dataSEXP, SEXP windowsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type windowsize(windowsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sd_neighbors_all_discard_cpp(data, windowsize));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_scorepeak_detect_localmaxima_reflecting_cpp", (DL_FUNC) &_scorepeak_detect_localmaxima_reflecting_cpp, 2},
    {"_scorepeak_detect_localmaxima_periodic_cpp", (DL_FUNC) &_scorepeak_detect_localmaxima_periodic_cpp, 2},
    {"_scorepeak_detect_localmaxima_discard_cpp", (DL_FUNC) &_scorepeak_detect_localmaxima_discard_cpp, 2},
    {"_scorepeak_max_neighbors_left_reflecting_cpp", (DL_FUNC) &_scorepeak_max_neighbors_left_reflecting_cpp, 2},
    {"_scorepeak_max_neighbors_right_reflecting_cpp", (DL_FUNC) &_scorepeak_max_neighbors_right_reflecting_cpp, 2},
    {"_scorepeak_max_neighbors_both_reflecting_cpp", (DL_FUNC) &_scorepeak_max_neighbors_both_reflecting_cpp, 2},
    {"_scorepeak_max_neighbors_all_reflecting_cpp", (DL_FUNC) &_scorepeak_max_neighbors_all_reflecting_cpp, 2},
    {"_scorepeak_max_neighbors_left_periodic_cpp", (DL_FUNC) &_scorepeak_max_neighbors_left_periodic_cpp, 2},
    {"_scorepeak_max_neighbors_right_periodic_cpp", (DL_FUNC) &_scorepeak_max_neighbors_right_periodic_cpp, 2},
    {"_scorepeak_max_neighbors_both_periodic_cpp", (DL_FUNC) &_scorepeak_max_neighbors_both_periodic_cpp, 2},
    {"_scorepeak_max_neighbors_all_periodic_cpp", (DL_FUNC) &_scorepeak_max_neighbors_all_periodic_cpp, 2},
    {"_scorepeak_max_neighbors_left_discard_cpp", (DL_FUNC) &_scorepeak_max_neighbors_left_discard_cpp, 2},
    {"_scorepeak_max_neighbors_right_discard_cpp", (DL_FUNC) &_scorepeak_max_neighbors_right_discard_cpp, 2},
    {"_scorepeak_max_neighbors_both_discard_cpp", (DL_FUNC) &_scorepeak_max_neighbors_both_discard_cpp, 2},
    {"_scorepeak_max_neighbors_all_discard_cpp", (DL_FUNC) &_scorepeak_max_neighbors_all_discard_cpp, 2},
    {"_scorepeak_mean_neighbors_left_reflecting_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_left_reflecting_cpp, 2},
    {"_scorepeak_mean_neighbors_right_reflecting_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_right_reflecting_cpp, 2},
    {"_scorepeak_mean_neighbors_both_reflecting_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_both_reflecting_cpp, 2},
    {"_scorepeak_mean_neighbors_all_reflecting_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_all_reflecting_cpp, 2},
    {"_scorepeak_mean_neighbors_left_periodic_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_left_periodic_cpp, 2},
    {"_scorepeak_mean_neighbors_right_periodic_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_right_periodic_cpp, 2},
    {"_scorepeak_mean_neighbors_both_periodic_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_both_periodic_cpp, 2},
    {"_scorepeak_mean_neighbors_all_periodic_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_all_periodic_cpp, 2},
    {"_scorepeak_mean_neighbors_left_discard_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_left_discard_cpp, 2},
    {"_scorepeak_mean_neighbors_right_discard_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_right_discard_cpp, 2},
    {"_scorepeak_mean_neighbors_both_discard_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_both_discard_cpp, 2},
    {"_scorepeak_mean_neighbors_all_discard_cpp", (DL_FUNC) &_scorepeak_mean_neighbors_all_discard_cpp, 2},
    {"_scorepeak_min_neighbors_left_reflecting_cpp", (DL_FUNC) &_scorepeak_min_neighbors_left_reflecting_cpp, 2},
    {"_scorepeak_min_neighbors_right_reflecting_cpp", (DL_FUNC) &_scorepeak_min_neighbors_right_reflecting_cpp, 2},
    {"_scorepeak_min_neighbors_both_reflecting_cpp", (DL_FUNC) &_scorepeak_min_neighbors_both_reflecting_cpp, 2},
    {"_scorepeak_min_neighbors_all_reflecting_cpp", (DL_FUNC) &_scorepeak_min_neighbors_all_reflecting_cpp, 2},
    {"_scorepeak_min_neighbors_left_periodic_cpp", (DL_FUNC) &_scorepeak_min_neighbors_left_periodic_cpp, 2},
    {"_scorepeak_min_neighbors_right_periodic_cpp", (DL_FUNC) &_scorepeak_min_neighbors_right_periodic_cpp, 2},
    {"_scorepeak_min_neighbors_both_periodic_cpp", (DL_FUNC) &_scorepeak_min_neighbors_both_periodic_cpp, 2},
    {"_scorepeak_min_neighbors_all_periodic_cpp", (DL_FUNC) &_scorepeak_min_neighbors_all_periodic_cpp, 2},
    {"_scorepeak_min_neighbors_left_discard_cpp", (DL_FUNC) &_scorepeak_min_neighbors_left_discard_cpp, 2},
    {"_scorepeak_min_neighbors_right_discard_cpp", (DL_FUNC) &_scorepeak_min_neighbors_right_discard_cpp, 2},
    {"_scorepeak_min_neighbors_both_discard_cpp", (DL_FUNC) &_scorepeak_min_neighbors_both_discard_cpp, 2},
    {"_scorepeak_min_neighbors_all_discard_cpp", (DL_FUNC) &_scorepeak_min_neighbors_all_discard_cpp, 2},
    {"_scorepeak_sd_neighbors_left_reflecting_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_left_reflecting_cpp, 2},
    {"_scorepeak_sd_neighbors_right_reflecting_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_right_reflecting_cpp, 2},
    {"_scorepeak_sd_neighbors_both_reflecting_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_both_reflecting_cpp, 2},
    {"_scorepeak_sd_neighbors_all_reflecting_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_all_reflecting_cpp, 2},
    {"_scorepeak_sd_neighbors_left_periodic_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_left_periodic_cpp, 2},
    {"_scorepeak_sd_neighbors_right_periodic_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_right_periodic_cpp, 2},
    {"_scorepeak_sd_neighbors_both_periodic_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_both_periodic_cpp, 2},
    {"_scorepeak_sd_neighbors_all_periodic_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_all_periodic_cpp, 2},
    {"_scorepeak_sd_neighbors_left_discard_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_left_discard_cpp, 2},
    {"_scorepeak_sd_neighbors_right_discard_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_right_discard_cpp, 2},
    {"_scorepeak_sd_neighbors_both_discard_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_both_discard_cpp, 2},
    {"_scorepeak_sd_neighbors_all_discard_cpp", (DL_FUNC) &_scorepeak_sd_neighbors_all_discard_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_scorepeak(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
